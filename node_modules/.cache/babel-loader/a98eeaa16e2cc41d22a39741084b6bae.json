{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/geocas/Documents/Project5CDEReact/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport jsonObject from './JSON/test.json'; // Defining our Todo class \n\nclass Todo {\n  constructor() {\n    this.userId = void 0;\n    this.id = void 0;\n    this.title = void 0;\n    this.done = void 0;\n    this.label = void 0;\n    this.name1 = void 0;\n    this.spec1 = void 0;\n  }\n\n  getLabel() {\n    return this.label;\n  }\n\n  getName() {\n    return this.name1;\n  }\n\n  getSpec() {\n    return this.spec1;\n  }\n\n  isDone() {\n    return this.done;\n  }\n\n} // Object.assign() will clone jsonData into \n// Todo class object Storing the new class \n// object in a typescript variable \n\n\nlet newTodo = Object.assign(new Todo(), jsonObject);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), createCard(newTodo.getLabel(), newTodo.getName()), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), createCard(\"Sexual Orientation\", \"Sexual Orientation\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction createCard(label, name) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"labelCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"CDECard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), \"Man\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this), \"Woman\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this), \"Non-binary\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }, this), \"Transgender\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 28\n        }, this), \"None of these describe me, and I\\u2019d like to consider additional options\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 87\n        }, this), \"Prefer not to answer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"CDECard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), \"1b. Are any of these a closer description to your gender identity? Trans man/Transgender Man/FTM\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 46\n        }, this), \"Trans woman/Transgender Woman/MTF \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 51\n        }, this), \"Genderqueer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }, this), \"Genderfluid\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this), \"Gender variant\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }, this), \"Questioning or unsure of your gender identity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/geocas/Documents/Project5CDEReact/src/App.tsx"],"names":["React","jsonObject","Todo","userId","id","title","done","label","name1","spec1","getLabel","getName","getSpec","isDone","newTodo","Object","assign","App","createCard","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C,CAEA;;AACA,MAAMC,IAAN,CAAW;AAAA;AAAA,SACPC,MADO;AAAA,SAEPC,EAFO;AAAA,SAGPC,KAHO;AAAA,SAIPC,IAJO;AAAA,SAKPC,KALO;AAAA,SAMPC,KANO;AAAA,SAOPC,KAPO;AAAA;;AASPC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKH,KAAZ;AACH;;AAEDI,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKH,KAAZ;AACH;;AAEDI,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKH,KAAZ;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKP,IAAZ;AACH;;AAvBM,C,CA0BX;AACA;AACA;;;AACA,IAAIQ,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAId,IAAJ,EAAd,EAA0BD,UAA1B,CAAd;;AAGA,SAASgB,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEKC,UAAU,CAACJ,OAAO,CAACJ,QAAR,EAAD,EAAqBI,OAAO,CAACH,OAAR,EAArB,CAFf,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKO,UAAU,CAAC,oBAAD,EAAuB,oBAAvB,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQD,G;;AAaT,SAASC,UAAT,CAAoBX,KAApB,EAAmCY,IAAnC,EAAiD;AAC/C,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACI;AAAA,gBAAKZ;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA,gCACI;AAAA,oBAAKY;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,sBAEO;AAAA;AAAA;AAAA;AAAA,gBAFP,wBAGS;AAAA;AAAA;AAAA;AAAA,gBAHT,6BAIc;AAAA;AAAA;AAAA;AAAA,gBAJd,8BAKe;AAAA;AAAA;AAAA;AAAA,gBALf,8FAM0E;AAAA;AAAA;AAAA;AAAA,gBAN1E,uCAOwB;AAAA;AAAA;AAAA;AAAA,gBAPxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA,gCACI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,mHAIiC;AAAA;AAAA;AAAA;AAAA,gBAJjC,qDAKsC;AAAA;AAAA;AAAA;AAAA,gBALtC,8BAMe;AAAA;AAAA;AAAA;AAAA,gBANf,8BAOe;AAAA;AAAA;AAAA;AAAA,gBAPf,iCAQkB;AAAA;AAAA;AAAA;AAAA,gBARlB,gEASiD;AAAA;AAAA;AAAA;AAAA,gBATjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;AAED,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport { StringLiteral } from 'typescript';\nimport './App.css';\nimport jsonObject from './JSON/test.json'\n\n// Defining our Todo class \nclass Todo { \n    userId!: number; \n    id!: number; \n    title!: string; \n    done!: boolean;\n    label!: string;\n    name1!: string;\n    spec1!: string;\n   \n    getLabel() { \n        return this.label; \n    }\n\n    getName() {\n        return this.name1;\n    }\n\n    getSpec() {\n        return this.spec1;\n    }\n   \n    isDone() { \n        return this.done; \n    } \n} \n\n// Object.assign() will clone jsonData into \n// Todo class object Storing the new class \n// object in a typescript variable \nlet newTodo = Object.assign(new Todo(), jsonObject); \n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Overview</h1>\n          {createCard(newTodo.getLabel(), newTodo.getName())}\n          <br/>\n          {createCard(\"Sexual Orientation\", \"Sexual Orientation\")}\n      </header>\n    </div>\n  );\n}\n\nfunction createCard(label: string, name: string) {\n  return (\n    <section className=\"labelCard\"> \n        <h1>{label}</h1>\n        <div className=\"cards\">\n            <section className=\"CDECard\">\n                <h2>{name}</h2>\n                Man<br />\n                Woman<br />\n                Non-binary<br />\n                Transgender<br />\n                None of these describe me, and Iâ€™d like to consider additional options<br />\n                Prefer not to answer<br />\n\n                \n            </section>\n            <section className=\"CDECard\">\n                <h2>{name}</h2>\n                1b. Are any of these a closer description to your gender identity?\n                \n                Trans man/Transgender Man/FTM<br />\n                Trans woman/Transgender Woman/MTF <br />\n                Genderqueer<br />\n                Genderfluid<br />\n                Gender variant<br />\n                Questioning or unsure of your gender identity<br />\n            </section>\n        </div>\n    </section>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}