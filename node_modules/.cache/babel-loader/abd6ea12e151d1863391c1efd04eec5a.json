{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/geocas/Documents/Project5CDEReact/src/index.tsx\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import { Provider } from 'react-redux';\n// import counterReducer from './redux-components/ReduxStuff';\n// import reportWebVitals from './reportWebVitals';\n// // Entry point of the app\n// // Create and initialize the Redux store\n// // An app has only one store\n// // The reducer (function) is the argument of createStore\n// // counterReducer comes from reducer.tsx\n// const myStore = createStore(counterReducer);\n// ReactDOM.render(\n//   <React.StrictMode>\n//       <Provider store={myStore}>\n//     <App />\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport counterReducer from './redux-components/ReduxStuff';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; // Entry point of the app\n// Create and initialize the Redux store\n// An app has only one store\n// The reducer (function) is the argument of createStore\n// counterReducer comes from reducer.tsx\n\nconst myStore = createStore(counterReducer); // Store is a prop of the Provider component\n// Provider is the outermost component of the app to help\n// ensure that every component has access\n/// to the Redux store and functionality \n// The <Provider /> makes the Redux store available to any nested \n// components that have been wrapped in the connect() function\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: myStore,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this), document.querySelector('#root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/geocas/Documents/Project5CDEReact/src/index.tsx"],"names":["React","ReactDOM","App","createStore","Provider","counterReducer","serviceWorker","myStore","render","document","querySelector","unregister"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AAEA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAGJ,WAAW,CAACE,cAAD,CAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACAJ,QAAQ,CAACO,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,OAAjB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF,E,CAOA;AACA;AACA;;AACAJ,aAAa,CAACK,UAAd","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import { Provider } from 'react-redux';\n// import counterReducer from './redux-components/ReduxStuff';\n// import reportWebVitals from './reportWebVitals';\n\n// // Entry point of the app\n\n// // Create and initialize the Redux store\n// // An app has only one store\n// // The reducer (function) is the argument of createStore\n// // counterReducer comes from reducer.tsx\n// const myStore = createStore(counterReducer);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//       <Provider store={myStore}>\n//     <App />\n//     </Provider>\n//   </React.StrictMode>,\n\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport counterReducer from './redux-components/ReduxStuff';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n// Entry point of the app\n\n// Create and initialize the Redux store\n// An app has only one store\n// The reducer (function) is the argument of createStore\n// counterReducer comes from reducer.tsx\nconst myStore = createStore(counterReducer);\n\n// Store is a prop of the Provider component\n// Provider is the outermost component of the app to help\n// ensure that every component has access\n/// to the Redux store and functionality \n// The <Provider /> makes the Redux store available to any nested \n// components that have been wrapped in the connect() function\nReactDOM.render(\n  <Provider store={myStore}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}